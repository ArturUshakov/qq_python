name: Build and Release Binaries

on:
  push:
    branches:
      - main
    paths:
      - '**.py'
      - '.github/workflows/release.yml'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-20.04

    steps:
      - name: 🛎️ Checkout repo
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: 📦 Install Nuitka and dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            python3 \
            python3-pip \
            python3-dev \
            python3-distutils \
            gcc \
            g++ \
            clang \
            build-essential \
            patchelf \
            zlib1g-dev \
            curl
          pip install --upgrade pip
          pip install colorama requests tqdm nuitka

      - name: ⚙️ Build binary with Nuitka
        run: |
          python3 cli.py
          python3 -m nuitka cli.py --onefile --output-dir=output --output-filename=qq --static-libpython=yes
          mv output/qq output/qq-linux

      - name: 📤 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qq-linux
          path: output/qq-linux

  build-macos:
    runs-on: macos-latest

    steps:
      - name: 🛎️ Checkout repo
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: 📦 Install Nuitka and dependencies
        run: |
          brew install llvm zlib
          pip install --upgrade pip
          pip install colorama requests tqdm nuitka

      - name: ⚙️ Build binary with Nuitka
        run: |
          python3 cli.py
          NUITKA_CCACHE_BINARY=none python3 -m nuitka cli.py \
            --onefile \
            --output-dir=output \
            --output-filename=qq
          mv output/qq output/qq-macos

      - name: 📤 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qq-macos
          path: output/qq-macos

  release:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Download Linux binary
        uses: actions/download-artifact@v4
        with:
          name: qq-linux
          path: ./dist

      - name: ⬇️ Download macOS binary
        uses: actions/download-artifact@v4
        with:
          name: qq-macos
          path: ./dist

      - name: 🏷️ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: "Release v${{ github.run_number }}"
          files: |
            dist/qq-linux
            dist/qq-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
